cabal-version:      >=1.10
name:               aeson-benchmarks
version:            0
build-type:         Simple
tested-with:
  GHC ==7.8.4
   || ==7.10.3
   || ==8.0.2
   || ==8.2.2
   || ==8.4.4
   || ==8.6.5
   || ==8.8.4
   || ==8.10.4
   || ==9.0.1

extra-source-files:
  cbits/*.c
  include/*.h

library
  default-language: Haskell2010
  hs-source-dirs:   src src-ffi src-pure attoparsec-iso8601/src
  c-sources:        cbits/unescape_string.c
  build-depends:
      attoparsec
    , base
    , base-compat-batteries
    , bytestring             >=0.10.4
    , containers
    , data-fix
    , deepseq
    , dlist
    , ghc-prim
    , hashable
    , indexed-traversable
    , mtl
    , primitive
    , scientific
    , semialign
    , strict
    , syb
    , tagged
    , template-haskell
    , text
    , th-abstraction
    , these
    , time
    , time-compat
    , transformers
    , unordered-containers
    , uuid-types
    , vector

  if impl(ghc >=8.0)
    build-depends: witherable

  if !impl(ghc >=8.6)
    build-depends: contravariant

  if !impl(ghc >=8.0)
    -- `Data.Semigroup` is available in base only since GHC 8.0 / base 4.9
    build-depends:
        fail
      , semigroups
      , transformers-compat

  if !impl(ghc >=7.10)
    -- `Numeric.Natural` is available in base only since GHC 7.10 / base 4.8
    build-depends:
        nats
      , void

  include-dirs:     include
  ghc-options:      -Wall
  cpp-options:      -DGENERICS
  exposed-modules:
    Data.Aeson
    Data.Aeson.Encoding
    Data.Aeson.Encoding.Builder
    Data.Aeson.Encoding.Internal
    Data.Aeson.Internal
    Data.Aeson.Internal.Functions
    Data.Aeson.Internal.Time
    Data.Aeson.Key
    Data.Aeson.KeyMap
    Data.Aeson.Parser
    Data.Aeson.Parser.Internal
    Data.Aeson.Parser.Time
    Data.Aeson.Parser.Unescape
    Data.Aeson.Parser.UnescapeFFI
    Data.Aeson.Parser.UnescapePure
    Data.Aeson.Text
    Data.Aeson.TH
    Data.Aeson.Types
    Data.Aeson.Types.Class
    Data.Aeson.Types.FromJSON
    Data.Aeson.Types.Generic
    Data.Aeson.Types.Internal
    Data.Aeson.Types.ToJSON
    Data.Attoparsec.Time
    Data.Attoparsec.Time.Internal

-- Idea is to fold as many benchmarks into this as possible.
executable aeson-benchmark-suite
  default-language: Haskell2010
  main-is:          Suite.hs
  hs-source-dirs:   bench examples/src
  ghc-options:      -Wall -rtsopts
  build-depends:
      aeson-benchmarks
    , attoparsec
    , base
    , base-compat-batteries
    , blaze-builder
    , buffer-builder
    , bytestring
    , containers
    , criterion
    , deepseq
    , filepath
    , hashable
    , json
    , scientific
    , tagged
    , template-haskell
    , text
    , time
    , unordered-containers
    , vector

  other-modules:
    AesonFoldable
    AesonMap
    Auto.G.BigProduct
    Auto.G.BigRecord
    Auto.G.BigSum
    Auto.G.D
    Auto.T.BigProduct
    Auto.T.BigRecord
    Auto.T.BigSum
    Auto.T.D
    AutoCompare
    Compare
    Compare.BufferBuilder
    Compare.JsonBench
    CompareWithJSON
    Dates
    GitHub
    Issue673
    Micro
    Options
    Twitter
    Twitter.Generic
    Twitter.Manual
    Twitter.Options
    Twitter.TH
    Typed
    Typed.Generic
    Typed.Manual
    Typed.TH
    Utils

  if impl(ghc <8.4)
    other-modules: Compare.JsonBuilder
    build-depends: json-builder

  if !impl(ghc >=8.0)
    build-depends: fail
